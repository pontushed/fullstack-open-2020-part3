{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","personService.js","Notification.js","App.js","index.js"],"names":["Filter","handler","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","type","Persons","persons","filterName","onDelete","listPersons","length","filter","p","name","toLowerCase","includes","handleClick","event","target","id","map","key","number","onClick","baseUrl","axios","get","then","response","data","person","post","delete","put","Notification","message","text","className","App","useState","setPersons","setNewName","setNewNumber","setFilterName","setMessage","useEffect","personService","personsFromDatabase","preventDefault","window","confirm","personObject","find","newPerson","concat","setTimeout","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91ca97e6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ handler }) => {\n  return (\n    <div>\n      filter shown by\n      <input onChange={handler} />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({ persons, filterName, onDelete }) => {\n  const listPersons = filterName.length\n    ? persons.filter((p) => {\n        return p.name.toLowerCase().includes(filterName)\n      })\n    : persons\n\n  const handleClick = (event) => {\n    onDelete(event.target.id)\n  }\n\n  return (\n    <ul>\n      {listPersons.map((p) => (\n        <li key={p.id}>\n          {p.name} {p.number}\n          <button id={p.id} onClick={handleClick}>\n            Remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}`)\n  return request.then((response) => response.data)\n}\n\nconst addNew = (person) => {\n  const request = axios.post(`${baseUrl}`, person)\n  return request.then((response) => response.data)\n}\n\nconst update = (person) => {\n  const request = axios.put(`${baseUrl}/${person.id}`, person)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((response) => response.data)\n}\n\nexport default { getAll, addNew, remove, update }\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message.text === null) {\n    return null\n  }\n\n  return <div className={message.type}>{message.text}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport personService from './personService'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [message, setMessage] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterNameChange = (event) => {\n    setFilterName(event.target.value.toLowerCase())\n  }\n\n  useEffect(() => {\n    personService.getAll().then((personsFromDatabase) => {\n      setPersons(personsFromDatabase)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.map((p) => p.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already in added to the phonebook. Replace the old number with a new one?`\n        )\n      ) {\n        const personObject = persons.find((p) => p.name === newName)\n        personObject.number = newNumber\n        personService.update(personObject).then(() => {\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService.addNew(personObject).then((newPerson) => {\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage({ text: `Added ${newName}`, type: 'success' })\n        setTimeout(() => {\n          setMessage({ text: null, type: 'success' })\n        }, 5000)\n      })\n    }\n  }\n\n  const handleDelete = (id) => {\n    const person = persons.find((p) => p.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(\n            persons.filter((p) => {\n              return p.id !== id\n            })\n          )\n          setMessage({\n            text: `${person.name} successfully removed.`,\n            type: 'success',\n          })\n          setTimeout(() => {\n            setMessage({ text: null, type: 'success' })\n          }, 5000)\n        })\n        .catch((error) => {\n          setMessage({\n            text: `Information of ${person.name} has been already removed from the server.`,\n            type: 'error',\n          })\n          setTimeout(() => {\n            setMessage({ text: null, type: 'error' })\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter handler={handleFilterNameChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filterName={filterName}\n        onDelete={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}